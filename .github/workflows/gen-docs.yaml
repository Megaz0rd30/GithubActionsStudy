# This is a basic workflow to help you get started with Actions

name: doc-teste

# Controls when the workflow will run
on:
  - pull_request

permissions:
  actions: write
  pull-requests: write
  contents: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate_readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Install Terraform Docs
        run: |
            curl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
            tar -xzf terraform-docs.tar.gz
            chmod +x terraform-docs
      - name: Generate Terraform Docs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          for d in modules/*/ ; do
            echo "## Generating Cloud Provider > $d"
            
            for service_directory in $d*/ ; do
                echo "+++Generating Service > $service_directory"
                for service_modules_directory in $service_directory*/ ; do
                    echo ">>>> Generating Service Module > $service_modules_directory"
                    #modulesPath+=("$service_modules_directory")
                    ./terraform-docs markdown $service_modules_directory --output-file README.md 
                    stat "${service_modules_directory}README.md"
                    git add "${service_modules_directory}README.md"
                done
            done
          done
          git status
          git commit -m "#$(date +%s) Update Terraform README.md"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Bot Comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              await github.rest.issues.createComment(
                {
                  issue_number: ${{ github.event.number }},
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Generated Terraform Docs automatically'
                }
              )