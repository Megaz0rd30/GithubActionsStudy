# This is a basic workflow to help you get started with Actions

name: doc-teste

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate_docs_paths:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      module_paths: ${{ steps.id_generate_docs.outputs.list_paths }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - id: id_dep
        name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install jq -y
        
      - id: id_generate_docs
        name: generate_docs
        run: |
          modulesPath=()
          for d in modules/*/ ; do
          
              echo "## Generating Cloud Provider > $d"

              for service_directory in $d*/ ; do
                  echo "+++Generating Service > $service_directory"
                  
                  for service_modules_directory in $service_directory*/ ; do
                      echo ">>>> Generating Service Module > $service_modules_directory"
                      modulesPath+=("$service_modules_directory")
                  done
              done
          done

          jsonValue=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${modulesPath[@]}")
          jsonValue="{\"include\":$jsonValue}"
          jsonValue=$(sed 's|\"|\\"|g' <<< "$jsonValue")
          echo $jsonValue
          echo "list_paths=$jsonValue" >> "$GITHUB_OUTPUT"
  generate_readme:
    needs: generate_docs_paths
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.generate_docs_paths.outputs.module_paths) }}
    steps:
      - uses: actions/checkout@v3
      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: ${{ matrix.paths }}
          output-file: README.md
          output-method: inject
          git-push: "true"
